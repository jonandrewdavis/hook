[gd_scene load_steps=15 format=3 uid="uid://b1yleqbb8tc7x"]

[ext_resource type="PackedScene" uid="uid://btv0a42cgxt8g" path="res://Levels/WE_test.tscn" id="1_db21n"]
[ext_resource type="Material" uid="uid://cn1gsy15bkaff" path="res://Assets/materials/grid.tres" id="2_x5xie"]
[ext_resource type="Texture2D" uid="uid://ivvpsi314b34" path="res://Assets/textures/grid.jpg" id="3_yfwkt"]
[ext_resource type="Script" path="res://levels/killbox.gd" id="5_4tcdo"]

[sub_resource type="BoxMesh" id="BoxMesh_gd0ev"]
material = ExtResource("2_x5xie")
size = Vector3(20, 0.5, 20)

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_oahyi"]
data = PackedVector3Array(-10, 0.25, 10, 10, 0.25, 10, -10, -0.25, 10, 10, 0.25, 10, 10, -0.25, 10, -10, -0.25, 10, 10, 0.25, -10, -10, 0.25, -10, 10, -0.25, -10, -10, 0.25, -10, -10, -0.25, -10, 10, -0.25, -10, 10, 0.25, 10, 10, 0.25, -10, 10, -0.25, 10, 10, 0.25, -10, 10, -0.25, -10, 10, -0.25, 10, -10, 0.25, -10, -10, 0.25, 10, -10, -0.25, -10, -10, 0.25, 10, -10, -0.25, 10, -10, -0.25, -10, 10, 0.25, 10, -10, 0.25, 10, 10, 0.25, -10, -10, 0.25, 10, -10, 0.25, -10, 10, 0.25, -10, -10, -0.25, 10, 10, -0.25, 10, -10, -0.25, -10, 10, -0.25, 10, 10, -0.25, -10, -10, -0.25, -10)

[sub_resource type="Shader" id="Shader_cwof1"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.1.dev4's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_linear_mipmap,repeat_enable;
uniform float specular;
uniform float metallic;
varying vec3 uv1_triplanar_pos;
uniform float uv1_blend_sharpness;
varying vec3 uv1_power_normal;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	TANGENT = vec3(0.0,0.0,-1.0) * abs(NORMAL.x);
	TANGENT+= vec3(1.0,0.0,0.0) * abs(NORMAL.y);
	TANGENT+= vec3(1.0,0.0,0.0) * abs(NORMAL.z);
	TANGENT = normalize(TANGENT);
	BINORMAL = vec3(0.0,1.0,0.0) * abs(NORMAL.x);
	BINORMAL+= vec3(0.0,0.0,-1.0) * abs(NORMAL.y);
	BINORMAL+= vec3(0.0,1.0,0.0) * abs(NORMAL.z);
	BINORMAL = normalize(BINORMAL);
	uv1_power_normal=pow(abs(NORMAL),vec3(uv1_blend_sharpness));
	uv1_triplanar_pos = VERTEX * uv1_scale + uv1_offset;
	uv1_power_normal/=dot(uv1_power_normal,vec3(1.0));
	uv1_triplanar_pos *= vec3(1.0,-1.0, 1.0);
}

vec4 triplanar_texture(sampler2D p_sampler,vec3 p_weights,vec3 p_triplanar_pos) {
	vec4 samp=vec4(0.0);
	samp+= texture(p_sampler,p_triplanar_pos.xy) * p_weights.z;
	samp+= texture(p_sampler,p_triplanar_pos.xz) * p_weights.y;
	samp+= texture(p_sampler,p_triplanar_pos.zy * vec2(-1.0,1.0)) * p_weights.x;
	return samp;
}

void fragment() {
	vec4 albedo_tex = triplanar_texture(texture_albedo,uv1_power_normal,uv1_triplanar_pos);
	ALBEDO = (albedo.rgb * albedo_tex.r) + albedo_tex.g + albedo_tex.b;
	float metallic_tex = dot(triplanar_texture(texture_metallic,uv1_power_normal,uv1_triplanar_pos),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(triplanar_texture(texture_roughness,uv1_power_normal,uv1_triplanar_pos),roughness_texture_channel);
	ROUGHNESS = (1.0 - albedo_tex.g) * roughness;
	SPECULAR = specular;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_0racc"]
render_priority = 0
shader = SubResource("Shader_cwof1")
shader_parameter/albedo = Color(0.937255, 1, 0, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 0.5
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_blend_sharpness = 1.0
shader_parameter/uv1_scale = Vector3(0.5, 0.5, 0.5)
shader_parameter/uv1_offset = Vector3(0.5, 0.5, 0.5)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/texture_albedo = ExtResource("3_yfwkt")
shader_parameter/texture_roughness = ExtResource("3_yfwkt")

[sub_resource type="BoxMesh" id="BoxMesh_xc4gq"]
material = SubResource("ShaderMaterial_0racc")
size = Vector3(6, 0.5, 4)

[sub_resource type="BoxShape3D" id="BoxShape3D_1xsct"]
size = Vector3(6, 0.5, 4)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_62u37"]
render_priority = 0
shader = SubResource("Shader_cwof1")
shader_parameter/albedo = Color(0, 0.67451, 0, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 0.5
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_blend_sharpness = 1.0
shader_parameter/uv1_scale = Vector3(0.5, 0.5, 0.5)
shader_parameter/uv1_offset = Vector3(1, 0.5, 0.5)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/texture_albedo = ExtResource("3_yfwkt")
shader_parameter/texture_roughness = ExtResource("3_yfwkt")

[sub_resource type="PrismMesh" id="PrismMesh_rutao"]
material = SubResource("ShaderMaterial_62u37")
left_to_right = 0.0
size = Vector3(8, 2, 2)

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_j6kcl"]
data = PackedVector3Array(-4, 1, 1, 4, -1, 1, -4, -1, 1, -4, 1, -1, -4, -1, -1, 4, -1, -1, -4, 1, 1, -4, 1, -1, 4, -1, 1, -4, 1, -1, 4, -1, -1, 4, -1, 1, -4, 1, -1, -4, 1, 1, -4, -1, -1, -4, 1, 1, -4, -1, 1, -4, -1, -1, -4, -1, 1, 4, -1, 1, -4, -1, -1, 4, -1, 1, 4, -1, -1, -4, -1, -1)

[sub_resource type="BoxShape3D" id="BoxShape3D_ufcww"]
size = Vector3(200, 2, 200)

[node name="Level" type="Node3D"]

[node name="WorldEnvironment" parent="." instance=ExtResource("1_db21n")]

[node name="Floor" type="MeshInstance3D" parent="."]
transform = Transform3D(1.99342, 0, 0, 0, 0.99671, 0, 0, 0, 0.498355, -0.0250854, -0.250001, -0.18679)
mesh = SubResource("BoxMesh_gd0ev")

[node name="StaticBody3D" type="StaticBody3D" parent="Floor"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Floor/StaticBody3D"]
shape = SubResource("ConcavePolygonShape3D_oahyi")

[node name="Floor2" type="MeshInstance3D" parent="."]
transform = Transform3D(1.99342, 0, 0, 0, 0.99671, 0, 0, 0, 0.498355, -0.0250854, -0.250001, 26.8545)
mesh = SubResource("BoxMesh_gd0ev")

[node name="StaticBody3D" type="StaticBody3D" parent="Floor2"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Floor2/StaticBody3D"]
shape = SubResource("ConcavePolygonShape3D_oahyi")

[node name="Box" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -9.48606, 2, -5)
mesh = SubResource("BoxMesh_xc4gq")

[node name="StaticBody3D" type="StaticBody3D" parent="Box"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Box/StaticBody3D"]
shape = SubResource("BoxShape3D_1xsct")

[node name="Box2" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -16.125, 1.5, -5)
mesh = SubResource("BoxMesh_xc4gq")

[node name="StaticBody3D" type="StaticBody3D" parent="Box2"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Box2/StaticBody3D"]
shape = SubResource("BoxShape3D_1xsct")

[node name="Ramp" type="MeshInstance3D" parent="."]
transform = Transform3D(-4.37114e-08, 0, -1, 0, 1, 0, 1, 0, -4.37114e-08, 5, 0, 0)
mesh = SubResource("PrismMesh_rutao")
skeleton = NodePath("../Box")

[node name="StaticBody3D" type="StaticBody3D" parent="Ramp"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Ramp/StaticBody3D"]
shape = SubResource("ConcavePolygonShape3D_j6kcl")

[node name="Killbox" type="Area3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -7.95399, -23.1731, 7.8433)
script = ExtResource("5_4tcdo")

[node name="CollisionShape3D" type="CollisionShape3D" parent="Killbox"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -22.7045, -7.87852)
shape = SubResource("BoxShape3D_ufcww")

[node name="Spawns" type="Node3D" parent="."]

[node name="Marker3D" type="Marker3D" parent="Spawns"]

[node name="Marker3D2" type="Marker3D" parent="Spawns"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -5.81886, 0, 2.3809)

[node name="Marker3D3" type="Marker3D" parent="Spawns"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -13.2848, 0, 0)

[node name="Marker3D4" type="Marker3D" parent="Spawns"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 12.2467, 0, 0)

[node name="Marker3D5" type="Marker3D" parent="Spawns"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -2.42207, 0, 24.2944)

[node name="Marker3D6" type="Marker3D" parent="Spawns"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 6.37396, 0, 24.9694)

[connection signal="body_entered" from="Killbox" to="Killbox" method="_on_body_entered"]
